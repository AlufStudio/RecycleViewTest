/**
 * File generated by Magnet rest2mobile 1.1 - Apr 30, 2015 12:51:10 AM
 * @see {@link http://developer.magnet.com}
 */

package com.recycleview.tests.models.magnet.beans;


/**
 * Generated from json example
{
  "domain" : "self.EarthPorn",
  "media_embed" : {
  },
  "subreddit" : "EarthPorn",
  "selftext_html" : "&lt;!--SC_OFF--&gt;&lt;divclass=\"md\"&gt;&lt;p&gt;Thisthreadisintendedtohelpthesubredditcommunicateandgetsomediscussiongoingregardingthestateofthesubreddit,qualityofsubmissions,qualityofmoderation,effectivenessofrulesatachievingthedesiredeffect,andsoon.Feelfreetoaskquestionsaboutphotographyortechniquesusedtocreatetheamazingimagesyouseeinthissubreddit.Alsofeelfreetocommentyourfavouritephotographers,aswellassomeoftheirwork.Pleasenotethatthisthreadisintendedtobeconstructive,sowhenyoucommentpleasetrytooffersuggestionstobalanceyourcritique.&lt;/p&gt;\n\n&lt;p&gt;Pleasesortcommentsby&amp;#39;new&amp;#39;tofindcommentsthatwouldotherwisebeburied.&lt;/p&gt;\n&lt;/div&gt;&lt;!--SC_ON--&gt;",
  "selftext" : "Thisthreadisintendedtohelpthesubredditcommunicateandgetsomediscussiongoingregardingthestateofthesubreddit,qualityofsubmissions,qualityofmoderation,effectivenessofrulesatachievingthedesiredeffect,andsoon.Feelfreetoaskquestionsaboutphotographyortechniquesusedtocreatetheamazingimagesyouseeinthissubreddit.Alsofeelfreetocommentyourfavouritephotographers,aswellassomeoftheirwork.Pleasenotethatthisthreadisintendedtobeconstructive,sowhenyoucommentpleasetrytooffersuggestionstobalanceyourcritique.\n\nPleasesortcommentsby'new'tofindcommentsthatwouldotherwisebeburied.\n",
  "user_reports" : [ ],
  "id" : "3410gr",
  "gilded" : 0,
  "archived" : false,
  "clicked" : false,
  "author" : "AutoModerator",
  "score" : 5,
  "over_18" : false,
  "hidden" : false,
  "thumbnail" : "self",
  "subreddit_id" : "t5_2sbq3",
  "edited" : false,
  "downs" : 0,
     ...

TODO (generated by Magnet r2m) : Property media_embed is ignored because the value is empty object({}) in the json example.
TODO (generated by Magnet r2m) : Property mod_reports is ignored because the value is empty array([]) in the json example.
TODO (generated by Magnet r2m) : Property secure_media_embed is ignored because the value is empty object({}) in the json example.
TODO (generated by Magnet r2m) : Property user_reports is ignored because the value is empty array([]) in the json example.

 */

public class Data {

  
  private Boolean archived;

  
  private String author;

  
  private String author_flair_css_class;

  
  private Boolean clicked;

  
  private Double created;

  
  private Double created_utc;

  
  private String distinguished;

  
  private String domain;

  
  private Integer downs;

  
  private Boolean edited;

  
  private Integer gilded;

  
  private Boolean hidden;

  
  private String id;

  
  private Boolean is_self;

  
  private String name;

  
  private Integer num_comments;

  
  private Boolean over_18;

  
  private String permalink;

  
  private Boolean saved;

  
  private Integer score;

  
  private String selftext;

  
  private String selftext_html;

  
  private Boolean stickied;

  
  private String subreddit;

  
  private String subreddit_id;

  
  private String thumbnail;

  
  private String title;

  
  private Integer ups;

  
  private String url;

  
  private Boolean visited;

  public Boolean getArchived() {
    return archived;
  }
  public String getAuthor() {
    return author;
  }
  public String getAuthor_flair_css_class() {
    return author_flair_css_class;
  }
  public Boolean getClicked() {
    return clicked;
  }
  public Double getCreated() {
    return created;
  }
  public Double getCreated_utc() {
    return created_utc;
  }
  public String getDistinguished() {
    return distinguished;
  }
  public String getDomain() {
    return domain;
  }
  public Integer getDowns() {
    return downs;
  }
  public Boolean getEdited() {
    return edited;
  }
  public Integer getGilded() {
    return gilded;
  }
  public Boolean getHidden() {
    return hidden;
  }
  public String getId() {
    return id;
  }
  public Boolean getIs_self() {
    return is_self;
  }
  public String getName() {
    return name;
  }
  public Integer getNum_comments() {
    return num_comments;
  }
  public Boolean getOver_18() {
    return over_18;
  }
  public String getPermalink() {
    return permalink;
  }
  public Boolean getSaved() {
    return saved;
  }
  public Integer getScore() {
    return score;
  }
  public String getSelftext() {
    return selftext;
  }
  public String getSelftext_html() {
    return selftext_html;
  }
  public Boolean getStickied() {
    return stickied;
  }
  public String getSubreddit() {
    return subreddit;
  }
  public String getSubreddit_id() {
    return subreddit_id;
  }
  public String getThumbnail() {
    return thumbnail;
  }
  public String getTitle() {
    return title;
  }
  public Integer getUps() {
    return ups;
  }
  public String getUrl() {
    return url;
  }
  public Boolean getVisited() {
    return visited;
  }

  /**
  * Builder for Data
  **/
  public static class DataBuilder {
    private Data toBuild = new Data();

    public DataBuilder() {
    }

    public Data build() {
      return toBuild;
    }

    public DataBuilder archived(Boolean value) {
      toBuild.archived = value;
      return this;
    }
    public DataBuilder author(String value) {
      toBuild.author = value;
      return this;
    }
    public DataBuilder author_flair_css_class(String value) {
      toBuild.author_flair_css_class = value;
      return this;
    }
    public DataBuilder clicked(Boolean value) {
      toBuild.clicked = value;
      return this;
    }
    public DataBuilder created(Double value) {
      toBuild.created = value;
      return this;
    }
    public DataBuilder created_utc(Double value) {
      toBuild.created_utc = value;
      return this;
    }
    public DataBuilder distinguished(String value) {
      toBuild.distinguished = value;
      return this;
    }
    public DataBuilder domain(String value) {
      toBuild.domain = value;
      return this;
    }
    public DataBuilder downs(Integer value) {
      toBuild.downs = value;
      return this;
    }
    public DataBuilder edited(Boolean value) {
      toBuild.edited = value;
      return this;
    }
    public DataBuilder gilded(Integer value) {
      toBuild.gilded = value;
      return this;
    }
    public DataBuilder hidden(Boolean value) {
      toBuild.hidden = value;
      return this;
    }
    public DataBuilder id(String value) {
      toBuild.id = value;
      return this;
    }
    public DataBuilder is_self(Boolean value) {
      toBuild.is_self = value;
      return this;
    }
    public DataBuilder name(String value) {
      toBuild.name = value;
      return this;
    }
    public DataBuilder num_comments(Integer value) {
      toBuild.num_comments = value;
      return this;
    }
    public DataBuilder over_18(Boolean value) {
      toBuild.over_18 = value;
      return this;
    }
    public DataBuilder permalink(String value) {
      toBuild.permalink = value;
      return this;
    }
    public DataBuilder saved(Boolean value) {
      toBuild.saved = value;
      return this;
    }
    public DataBuilder score(Integer value) {
      toBuild.score = value;
      return this;
    }
    public DataBuilder selftext(String value) {
      toBuild.selftext = value;
      return this;
    }
    public DataBuilder selftext_html(String value) {
      toBuild.selftext_html = value;
      return this;
    }
    public DataBuilder stickied(Boolean value) {
      toBuild.stickied = value;
      return this;
    }
    public DataBuilder subreddit(String value) {
      toBuild.subreddit = value;
      return this;
    }
    public DataBuilder subreddit_id(String value) {
      toBuild.subreddit_id = value;
      return this;
    }
    public DataBuilder thumbnail(String value) {
      toBuild.thumbnail = value;
      return this;
    }
    public DataBuilder title(String value) {
      toBuild.title = value;
      return this;
    }
    public DataBuilder ups(Integer value) {
      toBuild.ups = value;
      return this;
    }
    public DataBuilder url(String value) {
      toBuild.url = value;
      return this;
    }
    public DataBuilder visited(Boolean value) {
      toBuild.visited = value;
      return this;
    }
  }
}
